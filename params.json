{"name":"Pritory","tagline":"Price tracking application for small business!","body":"# Summary\r\n**Pritory** is an [open source](http://en.wikipedia.org/wiki/Open_source), **price tracking application for small businesses**. **Pritory** aims to help small business owners to keep an organized and up-to-date overview of their local, regional and possibly international market for their products. \r\n\r\n# Installation\r\n## Introduction\r\nThis is a step-by-step installation guide to help get **Pritory** up and running in no time! The guide assumes that you have access to a UNIX-based server. You can install all this software manually, but it's better to use your system's package manager. Under MacOSX you can use either [homebrew](http://brew.sh) or the [MacPorts](https://www.macports.org) to install the software packages.\r\n\r\n## Packages\r\nIn order to install **Pritory** you need to install the following software packages to your server:\r\n* The ruby programming language, any version >= 2.x\r\n* A running MySQL database\r\n* A running Redis key-value storege engine\r\n* ImageMagick\r\n* Nginx, not strictly necessary but higly recommended!\r\n\r\n## Configure the MySQL database\r\nFirst install the MySQL database and configure the root user. Here are some guides for [Ubuntu](https://help.ubuntu.com/12.04/serverguide/mysql.html), [MacPorts](http://jackal.livejournal.com/2160464.html) and [FreeBSD](http://www.freebsddiary.org/mysql.php). You can find guides for your system online.\r\n\r\nNow create a MySQL database called `pritory`with the following command:\r\n`CREATE DATABASE tomato DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;`\r\n\r\nNow let's create a MySQL user and grant privileges to manipulate our new database:\r\n```\r\nCREATE USER 'user'@'localhost' IDENTIFIED BY 'password';\r\nGRANT ALL PRIVILEGES ON pritory.* TO 'user'@'localhost' WITH GRANT OPTION;\r\n```\r\nYou can substitute `user` and `password` with whatever you like.\r\n\r\n## Ruby, ImageMagick and Redis\r\nNow install [ImageMagick](http://www.imagemagick.org) and [ruby](https://www.ruby-lang.org). The better approach to this is to follow the guidelines of your distribution's package manager. Compilation of `ImageMagick` take a while, especially if you enable `+x11` support! Do the same with [Redis](http://redis.io). Precompiled binaries are available for all major Linux distributions though. Remember to install MySQL dev-headers too!\r\n\r\n## NGINX Configuration\r\n\r\nAworking example of NGINX, with OpenSSL support:\r\n```\r\nserver {\r\n  listen         80;\r\n  server_name my.domain.net;\r\n  return 301 https://$host$request_uri;\r\n}\r\n\r\nserver {\r\n  listen 443 ssl;\r\n  server_name my.domain.net;\r\n  client_max_body_size 2G;\r\n  ssl_certificate /etc/ssl/path/to.crt;\r\n  ssl_certificate_key /etc/ssl/path/to.key;\r\n  ssl_session_timeout 5m;\r\n  ssl_protocols SSLv3 TLSv1;\r\n  ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;\r\n  ssl_prefer_server_ciphers on;\r\n\r\n  root /home/user/code/pritory/public;\r\n  try_files $uri @thin;\r\n\r\n  location ^~ /assets/ {\r\n    proxy_set_header X-Real-IP $remote_addr;\r\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n    proxy_set_header Host $http_host;\r\n    proxy_redirect off;\r\n    proxy_pass http://thin;\r\n  }\r\n\r\n  location ~* \\.(jpeg|jpg|gif|png|ico|css|bmp|js)$ {\r\n    root /home/user/code/pritory/public;\r\n  }\r\n\r\n# serve file as static if exists\r\n  if (-f $request_filename)\r\n  {\r\n    break;\r\n  }\r\n\r\n  location @thin {\r\n    proxy_set_header X-Real-IP $remote_addr;\r\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n    proxy_set_header Host $http_host;\r\n    proxy_redirect off;\r\n    proxy_pass http://thin;\r\n  }\r\n  error_page 500 502 503 504 /50x.html;\r\n  location = /50x.html {\r\n    root html;\r\n  }\r\n}\r\n\r\nupstream thin {\r\n  server 127.0.0.1:3000;\r\n}\r\n```\r\nAs you probably understood we will use [Thin](http://code.macournoyer.com/thin/usage/) as our default rack web server. Thin by default runs on port `3000`.\r\n\r\n## Clone and install gems\r\nNow we are ready to clone `pritory` and fetch the required gems:\r\n```\r\nmkdir $HOME/code && cd $HOME/code\r\ngit clone https://github.com/atmosx/pritory\r\ncd pritory && bundle install\r\n```\r\nCompilation of the gems might also take a while. Also note installation of additional software might be needed!\r\n\r\n## Create the configuration file\r\nCreate a configuration file and pass the options that you need, like this:\r\n```\r\n#!/usr/bin/env ruby\r\nmodule MySecrets\r\n    DBUSER = 'dbuser'\r\n    DBPASS = 'dbpass'\r\n    ENVIR = 'development'\r\nend\r\n```\r\nPlease note that this file **doesn't exist** and you'll have to create it yourself in the root directory of the project!\r\n\r\nThen create your user and any other user you like, manually via `irb` using the following commands:\r\n```\r\ncd $HOME/code/pritory\r\nirb -r './pritory'\r\nUser.create(user: 'username', password: 'password')\r\n```\r\n\r\nNow you can run `thin start` on a `tmux` session and launch `nginx`. Then connect to the web age and perform your first login! Go straight to the 'Settings' menu and change the settings to whatever suits your needs.\r\n\r\n#License\r\n**Pritory** is released under [LGPLv3](https://www.gnu.org/licenses/lgpl-3.0.txt).\r\n\r\n# Contact\r\nContact information at <atma@convalesco.org>","google":"UA-1041268-8","note":"Don't delete this file! It's used internally to help with page regeneration."}